@{
    ViewBag.Title = "供应清单明细查询";
    Layout = "~/Views/Shared/_Form.cshtml";
}

<script src="~/Content/js/Comm.js"></script>
<script src="~/Content/js/jqgrid/jqgrid.min.js"></script>
<link href="~/Content/js/jqgrid/jqgrid.css" rel="stylesheet" />
<script src="~/Content/js/jqgrid/grid.locale-cn.js"></script>
<script src="~/Content/js/uploadFile.js"></script>
<script src="~/Content/js/indextab.js?v=1.1" charset="gbk"></script>
<script src="~/Content/js/commonView.js?v=1.4"></script>
<style>
    .select2-container {
        box-sizing: border-box;
        display: inline-block;
        margin: 0;
        position: relative;
        vertical-align: middle;
        width: 102% !important;
    }

    .SelectBG {
        background-color: #cecece;
        color: #FFF;
    }

    .ui-jqgrid tr.jqgrow td {
        vertical-align: middle;
    }
</style>

<!---------明细信息------->
<script type="text/javascript">
    var
    mydata = [];
    index = 1,
    lastsel = undefined,
    keyValue = $.request("keyValue");
    $(function () {
        //选择框样式调整
        $(".input-group-btn").each(function () {
            $(this).parent().parent().css("padding-right", "0px");
            $(this).css("padding-left", "8px");
            $(this).find("i").css("padding-bottom", "8px").css("padding-top", "8px");
        });

        gridList();
        if (!!keyValue) {
            $.ajax({
                url: "@Url.Action("GetFormJson", "SupplyList")",
                data: { keyValue: keyValue },
                dataType: "json",
                async: false,
                success: function (data) {
                    $("#formd").formSerialize(data.Item1);
                    var myData = data.Item2;
                    lodeList(myData);//加载明细数据
                }
            });
        }
    });
    var gridList = function () {
        var $gridList = $("#gridList");
        $gridList.dataGrid({
            datatype: "json",
            height: $(window).height() - 180,
            rownumbers: false,
            colModel: [
                    { label: "主键", name: "ID", hidden: true },
                    {
                        label: '原材料编号', name: 'RawMaterialNum', width: 120, height: 10, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'RawMaterialNum' + rowId + "\'";
                        }
                    },
                    {
                        label: '原材料名称', name: 'MaterialName', width: 100, height: 10, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'MaterialName' + rowId + "\'";
                        }
                    },
                    {
                        label: '计量单位', name: 'MeasurementUnit', hidden: true,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'MeasurementUnit' + rowId + "\'";
                        }
                    },
                    {
                        label: '计量单位', name: 'MeasurementUnitText', width: 60, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'MeasurementUnitText' + rowId + "\'";
                        }
                    },
                    {
                        label: '规格', name: 'Standard', width: 140, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'Standard' + rowId + "\'";
                        }
                    },
                    {
                        label: '批次计划数量(kg)', name: 'BatchPlanQuantity', width: 100, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'BatchPlanQuantity' + rowId + "\'";
                        }
                    },
                    {
                        label: '技术要求', name: 'TechnicalRequirement', width: 140, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'TechnicalRequirement' + rowId + "\'";
                        }
                    },
                    {
                        label: '备注', name: 'Remarks', width: 140, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'Remarks' + rowId + "\'";
                        }
                    },
                    //{ label: '本次供货量(kg)', name: 'ThisTimeCount', width: 100, align: "left", sortable: false, editable: true },
                    {
                        label: '完成供货量', name: 'HasSupplier', width: 100, align: "left", sortable: false,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'HasSupplier' + rowId + "\'";
                        }
                    },
                    {
                        label: '批次计划编号', name: 'BatchPlanNum', hidden: true,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'BatchPlanNum' + rowId + "\'";
                        }
                    },
                    {
                        label: '批次计划明细ID', name: 'BatchPlanItemId', hidden: true,
                        cellattr: function (rowId, tv, rawObject, cm, rdata) {
                            //合并单元格
                            return 'id=\'BatchPlanItemId' + rowId + "\'";
                    }
                },
                { label: '本次供货ID', name: 'HistoryId', hidden: true },
                { label: '供货类型', name: 'GhType', hidden: true },
                { label: 'BatchPlanItemNewCode', name: 'BatchPlanItemNewCode', hidden: true },
                {
                    label: '本次供货时间',
                    name: 'ThisTime',
                    width: 140,
                    align: "left",
                    sortable: false,
                    formatter: formatDatebox
                },
                {
                    label: '本次供货量',
                    name: 'ThisTimeCount',
                    width: 100,
                    align: "left",
                    sortable: false,
                    formatter: NewCellBcGhlOrRk
                },
                { label: '验收不合格量(kg)', name: 'NoPass', width: 100, align: "left", sortable: false },
                { label: '不合格原因', name: 'NoPassReason', width: 140, align: "left", sortable: false },
                { label: '检测不合格量(kg)', name: 'Unqualified', width: 100, align: "left", sortable: false },
                { label: '检验文件', name: 'EnclosureShow', width: 80, align: "left", sortable: false },
                { label: '检验文件', name: 'Enclosure', hidden: true },
                { label: '供货入库Id', name: 'InorderId', hidden: true },
            ],
            gridComplete: function() {
                $("div.unwritten").remove();
                var ids = $("#gridList").getDataIDs();
                for (var i = 0; i < ids.length; i++) {
                    var rowData = $("#gridList").getRowData(ids[i]);
                    if (rowData.GhType == "1") { //如果为1表示未供货的数据
                        $('#' + ids[i]).find("td").addClass("SelectBG");
                    }
                }
                var gridName = "gridList";
                Merger(gridName, 'RawMaterialNum');
                Merger(gridName, 'MaterialName');
                Merger(gridName, 'MeasurementUnit');
                Merger(gridName, 'MeasurementUnitText');
                Merger(gridName, 'Standard');
                Merger(gridName, 'BatchPlanQuantity');
                Merger(gridName, 'TechnicalRequirement');
                Merger(gridName, 'Remarks');
                Merger(gridName, 'HasSupplier');
                Merger(gridName, 'BatchPlanNum');
                Merger(gridName, 'BatchPlanItemId');
            },
            onCellSelect: function(rowid, iCol, cellContent, e) {
                //获取表格最后一行Id
                var selectedRowIds = $gridList.jqGrid("getDataIDs");
                var id = selectedRowIds[selectedRowIds.length - 1];
                if (rowid && (rowid !== lastsel || rowid == id)) {
                    $gridList.jqGrid('saveRow', lastsel);
                    $gridList.jqGrid('editRow', rowid, true);
                    lastsel = rowid;

                    $("#gridList>tbody").find("input:text").each(function() {
                        var width = parseInt($(this).css("width").replace('px', '')) - 25;
                        $(this).css("height", "20px").css("width", width + "px");
                    });
                }
                valid(rowid);
            },

        });
    }

    //本次供货量、入库
    function NewCellBcGhlOrRk(cellValue, options, rowObject) {
        var tdhtml = rowObject.ThisTimeCount;
        if (rowObject.ThisTimeCount > 0) {
            if (rowObject.InorderId == null || rowObject.InorderId == "" || rowObject.InorderId==undefined) {
                tdhtml += '<span style=\"color:red\">&nbsp;&nbsp;未入库</span>'
            }
            else {
                tdhtml+='<span style=\"color:green\">&nbsp;&nbsp;已入库</span>'
            }
        }
        return tdhtml;
    }
    function AddInOrder(BatchPlanNum) {
        var where = "?type=add&BatchPlanNum=" + BatchPlanNum;
        CommonOpenAdd({
            id: "Form",
            title: "新增到货入库信息",
            url: "@Url.Action("Form", "InOrder", new { area = "RawMaterial" })" + where,
            windowType: 2,
            btnText: "确认并发起",
        });
    }
    function OpenForLC() {
        var data = { width: "55%", height: "600px" };
        return data;
    }
    //合并单元格
    function Merger(gridName, CellName) {
        //得到显示到界面的id集合
        var mya = $("#" + gridName + "").getDataIDs();
        //数据总行数
        var length = mya.length;
        //定义合并行数
        var rowSpanTaxCount = 1;
        for (var i = 0; i < length; i += rowSpanTaxCount) {
            //从当前行开始比对下面的信息
            var before = $("#" + gridName + "").jqGrid('getRowData', mya[i]);
            rowSpanTaxCount = 1;
            for (j = i + 1; j <= length; j++) {
                //和上边的信息对比 如果值一样就合并行数+1 然后设置rowspan 让当前单元格隐藏
                var end = $("#" + gridName + "").jqGrid('getRowData', mya[j]);
                if (before[CellName] == end[CellName] && before["ID"] == end["ID"]) {
                    rowSpanTaxCount++;
                    $("#" + gridName + "").setCell(mya[j], CellName, '', { display: 'none' });
                } else {
                    break;
                }
            }
            $("#" + gridName + "").setCell(mya[i], CellName, '', '', { rowspan: rowSpanTaxCount });
        }
    };
    /*JQuery 限制文本框只能输入数字和小数点*/
    function valid(rowid) {
        $("#" + rowid + "_HasSupplier")
               .keyup(function () { regTextBox(this, 5); })
               .bind("paste", function () { regTextBox(this, 5); });

    }
    function regTextBox(obj, isf) {
        var reg = /^[0-9]*[1-9][0-9]*$/;
        if (isf) { reg = /\d+\.?\d{0,5}/; }
        var reg = $(obj).val().match(reg);
        var txt = '';
        if (reg != null) { txt = reg[0]; }
        $(obj).val(txt);
    }

    //批量添加回调函数
    function AllMyBack(row) {
        var rowData = [];
        if (row && row.length > 0) {
            for (var i = 0; i < row.length; i++) {
                var mydata = {
                    ID: 0,
                    RawMaterialNum: row[i].MaterialCode,
                    MaterialName: row[i].MaterialName,
                    Standard: row[i].SpecificationModel,
                    MeasurementUnit: row[i].MeasurementUnit,
                    MeasurementUnitText: row[i].MeasurementUnitText,
                    BatchPlanQuantity: "0.00000",
                    TechnicalRequirement: "",
                    Remarks: ""
                };
                rowData.push(mydata);
            }
        }
        lodeList(rowData);
    }

    //去除重复表格数据
    function filterGridData(data) {
        var columnData = [];
        $("#gridList").jqGrid('saveRow', lastsel);
        var ids = $("#gridList").jqGrid('getDataIDs');//获取多行的id
        if (ids.length < 1) {
            columnData = data;
        }
        $(ids).each(function (index, item) {
            var rowData = $("#gridList").jqGrid("getRowData", item);
            columnData.unshift(rowData);
        });
        var codearry = [];
        columnData.forEach(function (v) { codearry.push(v.MaterialCode); });
        $.each(data, function (index, item) {
            var r = $.inArray(item.MaterialCode, codearry)
            if (r <= -1) {
                columnData.push(item);
            }
        });
        return columnData;
    }

    //function selectTab(v) {
    //    var id = v.attr('id');
    //    $("#" + id + "").addClass("active").siblings().removeClass("active");
    //    $("#" + id + "Info").show();
    //    $("#" + id + "Info").siblings('div').hide();
    //}

    //加载列表数据
    function lodeList(data) {
        if (data != null && data != "") {
            mydata = data;
        }
        $("#gridList").jqGrid('clearGridData');
        $.each(mydata, function (i, item) {
            index++;
            item.id = index;
            $("#gridList").jqGrid('addRowData', index, item);
        });
    }

</script>
<!---------附件列表------->
<script type="text/javascript">

    function ConfirmButton(cellvalue, options, rowObject) {
        if (rowObject.Enclosure) {
            return "<a class='btn btn-primary' onclick='UplaodFileSem(" + rowObject.id + ")'>查看</a> ";
        } else {
            return "";
        }
    }
    function UplaodFileSem(rowid) {
        var rowObject = $("#gridList").jqGrid("getRowData", rowid);
        if (rowObject.Enclosure) {
            showFile(rowObject.Enclosure, "form", "SampleOrderItem");
        }
    }

</script>
<div style="margin-top: 10px;">
    <div id="MXXXInfo" style="padding-top: 5px; margin:10px;">
        <div class="toolbar">
        </div>
        <div class="gridPanel" style="margin-top: 1px; ">
            <table id="gridList"></table>
        </div>
    </div>
    <form id="formd">
        <!---------标识ID------->
        <input id="ID" name="ID" type="hidden" />
        <input id="BatchPlanTotal" name="BatchPlanTotal" type="hidden" />
        <input id="HasSupplierTotal" name="HasSupplierTotal" type="text" style="visibility:hidden" />
        <table class="form" style="margin-top:-20px;">
            <tr>
                <th class="formTitle" style="width:20px;">备注</th>
                <td class="formValue">
                    <textarea id="Remarks" name="Remarks" class="form-control" style="height: 60px;width:98%; padding-right: 2px;"></textarea>
                </td>
            </tr>
        </table>
    </form>
</div>